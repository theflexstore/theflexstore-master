// Generated by CoffeeScript 1.12.3
(function() {
  var AWS, helpers;

  helpers = require('../helpers');

  AWS = helpers.AWS;

  describe('AWS.Model.Shape', function() {
    describe('Traits', function() {
      return it('inherits streaming trait', function() {
        var api, shape;
        api = new AWS.Model.Api({
          shapes: {
            S1: {
              'type': 'blob',
              'streaming': true
            }
          }
        });
        shape = AWS.Model.Shape.create({
          members: {
            body: {
              shape: 'S1'
            }
          }
        }, {
          api: api
        });
        return expect(shape.members.body.isStreaming).to.eql(true);
      });
    });
    return describe('TimestampShape', function() {
      describe('toType()', function() {
        it('converts unix timestamps', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              timestampFormat: 'unixTimestamp'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toType(12300);
          return expect(date).to.eql(new Date(12300000));
        });
        it('converts iso8601 timestamps', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              timestampFormat: 'iso8601'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toType('1970-01-01T00:00:00Z');
          return expect(date).to.eql(new Date(0));
        });
        return it('converts rfc822 timestamps', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              timestampFormat: 'rfc822'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toType('Thu, 01 Jan 1970 00:00:00 GMT');
          return expect(date).to.eql(new Date(0));
        });
      });
      describe('toWireFormat()', function() {
        it('converts all header shapes to rfc822', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              timestampFormat: 'unixTimestamp'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp',
            location: 'header'
          }, {
            api: api
          });
          date = shape.toWireFormat(new Date(0));
          return expect(date).to.match(/Thu, 0?1 Jan 1970 00:00:00 (GMT|UTC)/);
        });
        it('converts all timestamps in JSON protocol to unixTimestamp', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              protocol: 'json'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toWireFormat(new Date(12300000));
          expect(date).to.equal(12300);
          api = new AWS.Model.Api({
            metadata: {
              protocol: 'rest-json'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toWireFormat(new Date(12300000));
          return expect(date).to.equal(12300);
        });
        return it('converts all timestamps in XML/query protocol to iso8601', function() {
          var api, date, shape;
          api = new AWS.Model.Api({
            metadata: {
              protocol: 'rest-xml'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toWireFormat(new Date(12300000));
          expect(date).to.equal('1970-01-01T03:25:00Z');
          api = new AWS.Model.Api({
            metadata: {
              protocol: 'query'
            }
          });
          shape = AWS.Model.Shape.create({
            type: 'timestamp'
          }, {
            api: api
          });
          date = shape.toWireFormat(new Date(12300000));
          return expect(date).to.equal('1970-01-01T03:25:00Z');
        });
      });
      return describe('BooleanShape', function() {
        return describe('toType()', function() {
          var shape;
          shape = AWS.Model.Shape.create({
            type: 'boolean'
          });
          it('converts true / false booleans', function() {
            expect(shape.toType(true)).to.eql(true);
            return expect(shape.toType(false)).to.eql(false);
          });
          it('converts string "true" and "false" to boolean', function() {
            expect(shape.toType('true')).to.eql(true);
            return expect(shape.toType('false')).to.eql(false);
          });
          it('converts other strings to false', function() {
            return expect(shape.toType('nottrue')).to.eql(false);
          });
          return it('converts null/undefined to null', function() {
            expect(shape.toType(null)).to.eql(null);
            return expect(shape.toType(void 0)).to.eql(null);
          });
        });
      });
    });
  });

}).call(this);
